{"ts":1360617701780,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//revision  A\r\n//Date:     1/2/2013\r\n//Time:     3:35\r\n\r\n//Device Model\r\nExt.define('secvid.model.deviceModel', {\r\n    extend: 'Ext.data.Model',\r\n    \r\n    config: {\r\n        fields: [{name: 'HID', type: string}],\r\n        \r\n        proxy: {\r\n            type: 'rest',\r\n            url: './Jason/hid.json',\r\n            \r\n        }\r\n    }\r\n    \r\n});\r\n\r\n//User Model\r\nExt.define('secvid.model.userModel', {\r\n    extend: 'Ext.data.Model',\r\n\r\n    config: {\r\n        fields: [\r\n            {name: 'username', type: string},\r\n            {name: 'password', type: string},\r\n            {name: 'secQ', type: string},\r\n            {name: 'secA', type: string},\r\n            {name: 'pass_expiry', type: date}\r\n            ],\r\n        \r\n        /*\r\n        validations: [\r\n            { type: 'presence',  field: 'username' },\r\n            { type: 'length',    field: 'username', min: 5 },\r\n            { type: 'format',    field: 'age', matcher: /\\d+/ }, //means it should be a number\r\n            { type: 'inclusion', field: 'gender', list: ['male', 'female'] },\r\n            { type: 'exclusion', field: 'name', list: ['admin'] }\r\n        ],\r\n        */\r\n\r\n        proxy: {\r\n            type: 'rest',\r\n            url : './Jason/users.json',\r\n            reader: {\r\n                type: 'json',\r\n                root: 'users'\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n/*\r\n// now lets try to create a new user with as many validation errors as we can\r\nvar newUser = Ext.create('User', {\r\n    username: 'admin',\r\n    password: 'twenty-nine',\r\n    pass_expiry: '17/2/2013'\r\n});\r\n\r\n// run some validation on the new user we just created\r\nvar errors = newUser.validate();\r\n\r\nconsole.log('Is User valid?', errors.isValid()); // returns 'false' as there were validation errors\r\nconsole.log('All Errors:', errors.items); // returns the array of all errors found on this model instance\r\n\r\nconsole.log('Password Errors:', errors.getByField('password')); // returns the errors for the password field\r\n*/"]],"start1":0,"start2":0,"length1":0,"length2":1984}]],"length":1984}
