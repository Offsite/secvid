{"ts":1360617746154,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Security\r\n//revision  A\r\n//Date:     1/2/2013\r\n//Time:     3:35\r\n\r\n//initialize to disable lockout and failed attempt counter\r\nvar lockout = 0;\r\nvar wrong = 0;\r\n\r\n//Mobile Device Security Module\r\n\r\n\r\n    //User Login\r\n    function login()\r\n        {\r\n        //Validate device\r\n        //Retrieve Hardware ID from the device\r\n            var HID = getHID;\r\n            //Load Authorized Hardware ID list from server  //Decryption too?\r\n            var index = deviceStore.find('HID', HID);   //find the index of the entry with this HID\r\n            //Check if the HID was found\r\n            if (index == -1) displaymessage(\"Mobile Device not Authorized\");    //HID not found\r\n            else\r\n            //User Login\r\n                {\r\n                //Load Authorized user data from server //Decrypt too?\r\n                //Username\r\n                    //Receive username from App Logic\r\n                    var username = getusername();\r\n                    //Load the User Model associated with given username\r\n                    index = userStore.find('username', username);   //find the index of the entry with this username\r\n                    var userdata = userStore.getAt(index);  //temporarily load the user's data\r\n                    //If no user model for that user, error message\r\n                    if (index = -1) displaymessage(\"username incorrect\");\r\n                    else\r\n                    //Password\r\n                    {\r\n                        //Receive password from App Logic\r\n                        var password = getpassword();\r\n                        //Load the correct password\r\n                        var authpass = userdata.get('password');\r\n                        //Compare password with that stored in user model\r\n                        if (password != authpass) //if credentials incorrect (or security questions answer incorrect)\r\n                            {\r\n                                displaymessage (\"password incorrect\");//error message\r\n                                //increment \"wrong\" (counter for failed attempts) (resets when any user successfully logs in)************\r\n                                //if too many failed attempts, set lockout (lockout until specific time/date 1 hour later) ********\r\n                            }    \r\n                        else\r\n                            //if username has lockout: error message, deny access\r\n                            /*\r\n                            if lockout displaymessage(\"Too many failed attempts. Locked out for one hour\");*******    \r\n                            else\r\n                            */\r\n                                //if password is older than 3 months: error message, go to password change (add early warning?)******\r\n                                //if currentdate > userdata.get(expiry)\r\n                                \r\n                                //Password Correct\r\n                                {\r\n                                    //Display status message to App Logic\r\n                                    displaymessage(\"User Credentials Correct\");\r\n                                    \r\n                                    //if credentials correct, continue to security question\r\n                                    //Security Questions\r\n                                        //Read security question from user model\r\n                                        var secQ = userdata.get('secQ');\r\n                                        //Display security question to App Logic\r\n                                        displaysecQ(secQ);\r\n                                        //Receive security answer from App Logic\r\n                                        var secA = getsecA();\r\n                                        //Read security answer from user model\r\n                                        var authsecA = userdata.get('secA');\r\n                                        //Compare\r\n                                        if (secA != authsecA)   //incorrect security answer\r\n                                            {\r\n                                            //return to login screen\r\n                                            //display error message\r\n                                            displaymessage(\"Incorrect Answer\");\r\n                                            }\r\n                                        else\r\n                                            {\r\n                                            //Display status message to App Logic\r\n                                            displaymessage(\"Welcome\" + username);\r\n                                            //Start Session Timer\r\n                                            //Give App logic information to access the video\r\n                                            }\r\n                                }\r\n                    }\r\n                }\r\n        }  \r\n        \r\n     \r\n    //Create credentials for a new user\r\n    function newuser()\r\n        {\r\n        //Receive Username and Password from Application Logic***********\r\n        var usercred = getcred();\r\n        //if a user model exists for that username, error message\r\n            //else create new user model\r\n            //Check password strength\r\n                //check length (at least 8 characters)\r\n                //check for both upper and lower case letters\r\n                //check for both letters and numbers\r\n                //check if the password is in the system's dictionary (including words/numbers related to the company and users\r\n                //if password too weak, send error message to mobile device\r\n            //store password in the user model\r\n            //calculate password expiry date and store in database\r\n        //Receive Security questions and answers from Application Logic************\r\n        var secdata = getsecdata;\r\n        //store security questions and answers in the user model\r\n        //display success message\r\n        \r\n        }\r\n\r\n    //Session Expiry\r\n        //session timer starts when user logs in (user login script)\r\n        //When timer reaches set number, warn the user the session is about to expire\r\n        //(allow the user to go to login screen to restart the session immediately)\r\n        //when timer reaches set number, log off\r\n        \r\n    //Change password\r\n    \r\n    \r\n    \r\n"]],"start1":0,"start2":0,"length1":0,"length2":6388}]],"length":6388}
{"contributors":[],"silentsave":false,"ts":1360618301791,"patch":[[{"diffs":[[0,"= getHID"],[1,"()"],[0,";\r\n     "]],"start1":348,"start2":348,"length1":16,"length2":18}]],"length":6390,"saved":false}
{"ts":1360618314077,"patch":[[{"diffs":[[0,"a new user\r\n"],[1,"    /*\r\n"],[0,"    function"]],"start1":4981,"start2":4981,"length1":24,"length2":32},{"diffs":[[0,"      }\r"],[1,"\n        */\r"],[0,"\n\r\n    /"]],"start1":6022,"start2":6022,"length1":16,"length2":28}]],"length":6410,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360620356030,"patch":[[{"diffs":[[0,"\r\n    \r\n    \r\n    \r\n"],[1,"\r\n\r\n//Sample for New User Creation\r\n/*\r\n// now lets try to create a new user with as many validation errors as we can\r\nvar newUser = Ext.create('User', {\r\n    username: 'admin',\r\n    password: 'twenty-nine',\r\n    pass_expiry: '17/2/2013'\r\n});"]],"start1":6390,"start2":6390,"length1":20,"length2":262}]],"length":6652,"saved":false}
{"ts":1360620358504,"patch":[[{"diffs":[[0,"13'\r\n});"],[1,"\r\n/*"]],"start1":6644,"start2":6644,"length1":8,"length2":12}]],"length":6656,"saved":false}
{"contributors":["jakeguy49@gmail.com"],"silentsave":false,"ts":1361826167572,"patch":[[{"diffs":[[0,"dule\r\n\r\n"],[1,"    "],[0,"\r\n    //"]],"start1":192,"start2":192,"length1":16,"length2":20},{"diffs":[[0," Login\r\n    "],[1,"//"],[0,"function log"]],"start1":216,"start2":216,"length1":24,"length2":26},{"diffs":[[0,"on login()\r\n"],[1,"    login: function()\r\n"],[0,"        {\r\n "]],"start1":236,"start2":236,"length1":24,"length2":47}]],"length":6685,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361987229138,"patch":[[{"diffs":[[0,"= 0;\r\n\r\n"],[1,"\r\n        /*//Load Stores (don't need to do this if they're set to autoload\r\n        var deviceStore = Ext.getStore('deviceStore');\r\n        deviceStore.load();\r\n        \r\n        var userStore = Ext.getStore('userStore');\r\n        userStore.load();\r\n        */\r\n\r\n"],[0,"//Mobile"]],"start1":157,"start2":157,"length1":16,"length2":281},{"diffs":[[0,"data"],[-1," from server //Decrypt too?"],[0,"\r\n  "]],"start1":1076,"start2":1076,"length1":35,"length2":8},{"diffs":[[0,"      //"],[-1,"Receive"],[1,"Load"],[0," passwor"]],"start1":1747,"start2":1747,"length1":23,"length2":20}]],"length":6920,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362256523450,"patch":[[{"diffs":[[1,"//Change Password Function\r\nchangepassword: function()\r\n    {\r\n        var secA = Ext.Msg.prompt('Change Password', \"Enter the current password for user \" + username + \".\", function(button, answer)        \r\n        \r\n        var LoginView = this.getLoginFormView();\r\n        var newvalues = LoginView.getValues();\r\n        console.log(\"The password is \" + newvalues.passwordLogin);\r\n        return newvalues.passwordLogin;\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],[0,"//Security\r\n//re"]],"start1":0,"start2":0,"length1":16,"length2":460}]],"length":7364,"saved":false}
{"ts":1362256633334,"patch":[[{"diffs":[[0,"nswer)        \r\n"],[1,"        {\r\n            if (button == \"ok\")\r\n                {\r\n                        \r\n                    //Read security answer from user model\r\n                    var authsecA = userdata.get('secA');\r\n                    //Compare\r\n                    if (answer != authsecA)   //incorrect security answer\r\n                        {\r\n                        window.global.userLoggedOn = 0;\r\n                        \r\n                        //display error message\r\n                        Ext.Msg.alert('Login Status', 'Incorrect Answer', Ext.emptyFn);\r\n                        }\r\n                    else\r\n                        {\r\n                        \r\n                        //Start Session Timer\r\n                        //Alert App that Login is successful\r\n                        window.global.userLoggedOn = 1;\r\n                        this.HomeView = Ext.Viewport.add({\r\n                            xtype: 'HomeView'\r\n                            });\r\n                        //Display status message to App Logic\r\n                        Ext.Msg.alert('Login Status', 'Login Successful', Ext.emptyFn);\r\n                        } \r\n                }\r\n            else\r\n                {\r\n                    window.global.userLoggedOn = 0;\r\n                }\r\n        });\r\n"],[0,"        \r\n      "]],"start1":191,"start2":191,"length1":32,"length2":1326},{"diffs":[[0,"    },\r\n\r\n\r\n"],[1,"//Change Security Question function\r\nchangesecQ: function()\r\n{\r\n\r\n}\r\n"],[0,"\r\n\r\n\r\n\r\n//Se"]],"start1":1718,"start2":1718,"length1":24,"length2":93}]],"length":8727,"saved":false}
{"ts":1362257329307,"patch":[[{"diffs":[[0,"    "],[-1,"else\r\n                        {"],[0,"\r\n  "]],"start1":811,"start2":811,"length1":39,"length2":8},{"diffs":[[0,"        "],[-1," //Start Session Timer"],[1,"\r\n                }\r\n            "],[0,"\r\n      "]],"start1":858,"start2":858,"length1":38,"length2":49},{"diffs":[[0,"    "],[1,"});\r\n"],[0,"        "],[1,"\r\n"],[0,"        "],[-1,"//Alert App that Login is successful\r\n                        window.global.userLoggedOn = 1;\r\n          "],[1,"var LoginView = this.getLoginFormView();\r\n        var newvalues = LoginView.getValues();\r\n        console.log(\"The password is \" + newvalues.passwordLogin);\r\n        return newvalues.passwordLogin;\r\n    },\r\n\r\n\r\n//Change Security Question function\r\nchangesecQ: function()\r\n{\r\n    var userdata = window.global.currentuser;\r\n    var secQ = userdata.get('secQ');\r\n    Ext.Msg.prompt('Answer Current Security Question', secQ, function(button, answer)"],[0,"       "],[1,"\r\n"],[0,"       "],[-1,"this.HomeView = Ext.Viewport.add("],[1," {\r\n            if (button == \"ok\")\r\n                "],[0,"{\r\n "]],"start1":905,"start2":905,"length1":176,"length2":545},{"diffs":[[0,"    "],[1,"\r\n "],[0,"    "],[-1,"xtype: 'HomeView'\r\n                            });"],[1,"               //Read security answer from user model\r\n                    var authsecA = userdata.get('secA');\r\n                    //Compare\r\n                    if (answer != authsecA)   //incorrect security answer\r\n                    {"],[0,"\r\n  "]],"start1":1469,"start2":1469,"length1":62,"length2":255},{"diffs":[[0,"  //"],[-1,"D"],[1,"d"],[0,"isplay "],[-1,"status"],[1,"error"],[0," message"],[-1," to App Logic"],[0,"\r\n  "]],"start1":1744,"start2":1744,"length1":43,"length2":29},{"diffs":[[0,"', '"],[-1,"Login Successful"],[1,"Incorrect Answer"],[0,"', E"]],"start1":1822,"start2":1822,"length1":24,"length2":24},{"diffs":[[0,"        "],[-1,"    } "],[1,"}\r\n                    else"],[0,"\r\n      "]],"start1":1872,"start2":1872,"length1":22,"length2":43},{"diffs":[[0,"                "],[-1,"}"],[1,"    {"],[0,"\r\n            el"]],"start1":1909,"start2":1909,"length1":33,"length2":37},{"diffs":[[0," {\r\n            "],[1," "],[-1,"else\r\n"],[1,"           Ext.Msg.prompt('New Security Question', 'Enter a new Security Question', function(button, question)\r\n        "],[0,"                "]],"start1":1928,"start2":1928,"length1":38,"length2":153},{"diffs":[[0,"                "],[1,"        "],[0,"window.global.us"]],"start1":2088,"start2":2088,"length1":32,"length2":40},{"diffs":[[0,".global."],[-1,"userLoggedOn = 0;\r\n"],[1,"currentUser.get('secQ')\r\n        "],[0,"        "]],"start1":2118,"start2":2118,"length1":35,"length2":49},{"diffs":[[0,"             }\r\n"],[1,"                "],[0,"        });\r\n   "]],"start1":2162,"start2":2162,"length1":32,"length2":48},{"diffs":[[0,"              })"],[-1,";"],[0,"\r\n        \r\n    "]],"start1":2188,"start2":2188,"length1":33,"length2":32},{"diffs":[[0,"    })\r\n        "],[1,"       "],[1,"     }"],[0,"\r\n        var Lo"]],"start1":2198,"start2":2198,"length1":32,"length2":45},{"diffs":[[0,"    "],[-1,"var LoginView = this.getLoginFormView();\r\n        var newvalues = LoginView.getValues();\r\n        console.log(\"The password is \" + newvalues.passwordLogin);\r\n        return newvalues.passwordLogin;\r\n    },\r\n\r\n\r\n//Change Security Question function\r\nchangesecQ: function()\r\n{\r\n"],[1,"                \r\n                       \r\n                }\r\n            \r\n        });"],[0,"\r\n}\r"]],"start1":2233,"start2":2233,"length1":283,"length2":95}]],"length":9257,"saved":false}
{"ts":1362257345119,"patch":[[{"diffs":[[0,"    "],[-1,"window.global.currentUser"],[1,"userdata"],[0,".get"]],"start1":2108,"start2":2108,"length1":33,"length2":16}]],"length":9240,"saved":false}
{"ts":1362257901799,"patch":[[{"diffs":[[0,"secQ')\r\n"],[1,"                            userdata.set('secQ', question);\r\n"],[0,"        "]],"start1":2126,"start2":2126,"length1":16,"length2":77}]],"length":9301,"saved":false}
{"ts":1362258200936,"patch":[[{"diffs":[[0,"       userdata."],[-1,"g"],[1,"s"],[0,"et('secQ')\r\n    "]],"start1":2105,"start2":2105,"length1":33,"length2":33},{"diffs":[[0,"t('secQ'"],[-1,")"],[1,", question);"],[0,"\r\n      "]],"start1":2123,"start2":2123,"length1":17,"length2":28},{"diffs":[[0,"    "],[-1,"userdata.set('"],[1,"Ext.Msg.prompt('New Security Answer', 'Enter the answer to your new Question:' + "],[0,"secQ"],[-1,"'"],[0,", "],[-1,"question"],[1,"function(button, answer)\r\n                            {\r\n                                userdata.set('secA', answer"],[0,");\r\n"]],"start1":2169,"start2":2169,"length1":37,"length2":211},{"diffs":[[0,"                "],[1," "],[-1,"}"],[1,"   });"],[0,"\r\n              "]],"start1":2388,"start2":2388,"length1":33,"length2":39},{"diffs":[[0,"      })"],[1,";"],[0,"\r\n      "]],"start1":2431,"start2":2431,"length1":16,"length2":17}]],"length":9493,"saved":false}
{"ts":1362258552324,"patch":[[{"diffs":[[0,"t('secQ');\r\n"],[1,"    var secA = userdata.get('secA');\r\n"],[0,"    Ext.Msg."]],"start1":1280,"start2":1280,"length1":24,"length2":62},{"diffs":[[0,"  \r\n"],[-1,"                    //Read security answer from user model\r\n                    var authsecA = userdata.get('secA');\r\n"],[0,"    "]],"start1":1509,"start2":1509,"length1":126,"length2":8},{"diffs":[[0,"  if (answer != "],[-1,"auth"],[0,"secA)   //incorr"]],"start1":1562,"start2":1562,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"userdata.set('"],[0,"secQ"],[-1,"',"],[1," ="],[0," que"]],"start1":2024,"start2":2024,"length1":28,"length2":14},{"diffs":[[0,"question"],[-1,")"],[0,";\r\n     "]],"start1":2035,"start2":2035,"length1":17,"length2":16},{"diffs":[[0,"            "],[1," secA = answer;\r\n                                Ext.Msg.confirm(\"Verify your Question and Answer\", \"Your Security Question is: \" + secQ + 'and your Answer is: ' +"],[0," userdata.se"]],"start1":2237,"start2":2237,"length1":24,"length2":187},{"diffs":[[0,"serdata."],[-1,"s"],[1,"g"],[0,"et('secA"]],"start1":2414,"start2":2414,"length1":17,"length2":17},{"diffs":[[0,"ecA'"],[-1,", answer);"],[1,") + \". Is this correct?\", function(button)\r\n                                {\r\n                                    if (button == yes)\r\n                                    {\r\n                                        userdata.set('secQ', secQ);\r\n                                        userdata.set('secA', secA);\r\n                                    }\r\n                                })"],[0,"\r\n  "]],"start1":2428,"start2":2428,"length1":18,"length2":393}]],"length":9932,"saved":false}
{"ts":1362258566002,"patch":[[{"diffs":[[0," == "],[1,"\""],[0,"yes"],[1,"\""],[0,")\r\n "]],"start1":2557,"start2":2557,"length1":11,"length2":13}]],"length":9934,"saved":false}
{"ts":1362258648015,"patch":[[{"diffs":[[0,"             }\r\n"],[1,"                                    else\r\n                                    {\r\n                                        Ext.Msg.alert('Security Question', 'Security Question and Answer not changed', Ext.emptyFn);\r\n                                    }\r\n"],[0,"                "]],"start1":2769,"start2":2769,"length1":32,"length2":286}]],"length":10188,"saved":false}
{"ts":1362263556570,"patch":[[{"diffs":[[0,"    var "],[1,"u"],[0,"se"],[-1,"cA ="],[1,"rdata = window.global.currentuser;\r\n        var authpass = userdata.get('password');\r\n       "],[0," Ext.Msg"]],"start1":67,"start2":67,"length1":22,"length2":112},{"diffs":[[0,"unction(button, "],[-1,"answer"],[1,"passwordIn"],[0,")        \r\n     "]],"start1":264,"start2":264,"length1":38,"length2":42},{"diffs":[[0,"    "],[-1,"    \r\n                    //Read security answer from user model\r\n                    var authsecA = userdata.get('secA');"],[1,"if (passwordIn != authpass) //if credentials incorrect\r\n                                {\r\n                                    Ext.Msg.alert('Login Status', 'Password Incorrect', Ext.emptyFn);\r\n                                    window.global.userLoggedOn = 0;\r\n                                }    \r\n                            else\r\n                                //Password Correct\r\n                                Ext.Msg.prompt('Change Password', \"Enter new password\", function(button, newPassword)    "],[0,"\r\n  "]],"start1":380,"start2":380,"length1":130,"length2":517},{"diffs":[[0,"            "],[-1,"//Compare\r\n"],[1,"            {\r\n    "],[0,"            "]],"start1":903,"start2":903,"length1":35,"length2":43},{"diffs":[[0,"    "],[-1,"if (answer != authsecA)   //incorrect security answer\r\n                        {\r\n                        window.global.userLoggedOn = 0;\r\n                        \r\n                        //display error message\r\n                        Ext.Msg.alert('Login Status', 'Incorrect Answer"],[1,"            if (button == \"ok\")\r\n                                    {\r\n                                        authpass = newPassword;\r\n                                        Ext.Msg.prompt('Confirm new Password', \"Enter new password again\", function(button, confPassword)\r\n                                        {\r\n                                            if (button == \"ok\")\r\n                                            {\r\n                                                if (confPassword == newPassword)\r\n                                                {\r\n                                                    userdata.set('password', newPassword);\r\n                                                    Ext.Msg.alert('Password Changed', 'Your Password has been successfully changed', Ext.emptyFn);\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    Ext.Msg.alert('Mismatch', 'Your confirmed password does not match your new password. Try Again"],[0,"', E"]],"start1":950,"start2":950,"length1":293,"length2":1114},{"diffs":[[0,"    "],[1,"        "],[-1,"}\r\n                    \r\n     "],[1,"                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n"],[0,"    "]],"start1":2098,"start2":2098,"length1":38,"length2":203},{"diffs":[[0,";\r\n    }"],[-1,","],[0,""],[1,""],[0,"\r\n\r\n\r\n//"]],"start1":2603,"start2":2603,"length1":17,"length2":16}]],"length":11662,"saved":false}
{"ts":1362263602973,"patch":[[{"diffs":[[0,");\r\n"],[-1,"        \r\n        var LoginView = this.getLoginFormView();\r\n        var newvalues = LoginView.getValues();\r\n        console.log(\"The password is \" + newvalues.passwordLogin);\r\n        return newvalues.passwordLogin;\r\n"],[0,"    "]],"start1":2385,"start2":2385,"length1":225,"length2":8}]],"length":11445,"saved":false}
