{"ts":1360617746154,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Security\r\n//revision  A\r\n//Date:     1/2/2013\r\n//Time:     3:35\r\n\r\n//initialize to disable lockout and failed attempt counter\r\nvar lockout = 0;\r\nvar wrong = 0;\r\n\r\n//Mobile Device Security Module\r\n\r\n\r\n    //User Login\r\n    function login()\r\n        {\r\n        //Validate device\r\n        //Retrieve Hardware ID from the device\r\n            var HID = getHID;\r\n            //Load Authorized Hardware ID list from server  //Decryption too?\r\n            var index = deviceStore.find('HID', HID);   //find the index of the entry with this HID\r\n            //Check if the HID was found\r\n            if (index == -1) displaymessage(\"Mobile Device not Authorized\");    //HID not found\r\n            else\r\n            //User Login\r\n                {\r\n                //Load Authorized user data from server //Decrypt too?\r\n                //Username\r\n                    //Receive username from App Logic\r\n                    var username = getusername();\r\n                    //Load the User Model associated with given username\r\n                    index = userStore.find('username', username);   //find the index of the entry with this username\r\n                    var userdata = userStore.getAt(index);  //temporarily load the user's data\r\n                    //If no user model for that user, error message\r\n                    if (index = -1) displaymessage(\"username incorrect\");\r\n                    else\r\n                    //Password\r\n                    {\r\n                        //Receive password from App Logic\r\n                        var password = getpassword();\r\n                        //Load the correct password\r\n                        var authpass = userdata.get('password');\r\n                        //Compare password with that stored in user model\r\n                        if (password != authpass) //if credentials incorrect (or security questions answer incorrect)\r\n                            {\r\n                                displaymessage (\"password incorrect\");//error message\r\n                                //increment \"wrong\" (counter for failed attempts) (resets when any user successfully logs in)************\r\n                                //if too many failed attempts, set lockout (lockout until specific time/date 1 hour later) ********\r\n                            }    \r\n                        else\r\n                            //if username has lockout: error message, deny access\r\n                            /*\r\n                            if lockout displaymessage(\"Too many failed attempts. Locked out for one hour\");*******    \r\n                            else\r\n                            */\r\n                                //if password is older than 3 months: error message, go to password change (add early warning?)******\r\n                                //if currentdate > userdata.get(expiry)\r\n                                \r\n                                //Password Correct\r\n                                {\r\n                                    //Display status message to App Logic\r\n                                    displaymessage(\"User Credentials Correct\");\r\n                                    \r\n                                    //if credentials correct, continue to security question\r\n                                    //Security Questions\r\n                                        //Read security question from user model\r\n                                        var secQ = userdata.get('secQ');\r\n                                        //Display security question to App Logic\r\n                                        displaysecQ(secQ);\r\n                                        //Receive security answer from App Logic\r\n                                        var secA = getsecA();\r\n                                        //Read security answer from user model\r\n                                        var authsecA = userdata.get('secA');\r\n                                        //Compare\r\n                                        if (secA != authsecA)   //incorrect security answer\r\n                                            {\r\n                                            //return to login screen\r\n                                            //display error message\r\n                                            displaymessage(\"Incorrect Answer\");\r\n                                            }\r\n                                        else\r\n                                            {\r\n                                            //Display status message to App Logic\r\n                                            displaymessage(\"Welcome\" + username);\r\n                                            //Start Session Timer\r\n                                            //Give App logic information to access the video\r\n                                            }\r\n                                }\r\n                    }\r\n                }\r\n        }  \r\n        \r\n     \r\n    //Create credentials for a new user\r\n    function newuser()\r\n        {\r\n        //Receive Username and Password from Application Logic***********\r\n        var usercred = getcred();\r\n        //if a user model exists for that username, error message\r\n            //else create new user model\r\n            //Check password strength\r\n                //check length (at least 8 characters)\r\n                //check for both upper and lower case letters\r\n                //check for both letters and numbers\r\n                //check if the password is in the system's dictionary (including words/numbers related to the company and users\r\n                //if password too weak, send error message to mobile device\r\n            //store password in the user model\r\n            //calculate password expiry date and store in database\r\n        //Receive Security questions and answers from Application Logic************\r\n        var secdata = getsecdata;\r\n        //store security questions and answers in the user model\r\n        //display success message\r\n        \r\n        }\r\n\r\n    //Session Expiry\r\n        //session timer starts when user logs in (user login script)\r\n        //When timer reaches set number, warn the user the session is about to expire\r\n        //(allow the user to go to login screen to restart the session immediately)\r\n        //when timer reaches set number, log off\r\n        \r\n    //Change password\r\n    \r\n    \r\n    \r\n"]],"start1":0,"start2":0,"length1":0,"length2":6388}]],"length":6388}
{"contributors":[],"silentsave":false,"ts":1360618301791,"patch":[[{"diffs":[[0,"= getHID"],[1,"()"],[0,";\r\n     "]],"start1":348,"start2":348,"length1":16,"length2":18}]],"length":6390,"saved":false}
{"ts":1360618314077,"patch":[[{"diffs":[[0,"a new user\r\n"],[1,"    /*\r\n"],[0,"    function"]],"start1":4981,"start2":4981,"length1":24,"length2":32},{"diffs":[[0,"      }\r"],[1,"\n        */\r"],[0,"\n\r\n    /"]],"start1":6022,"start2":6022,"length1":16,"length2":28}]],"length":6410,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360620356030,"patch":[[{"diffs":[[0,"\r\n    \r\n    \r\n    \r\n"],[1,"\r\n\r\n//Sample for New User Creation\r\n/*\r\n// now lets try to create a new user with as many validation errors as we can\r\nvar newUser = Ext.create('User', {\r\n    username: 'admin',\r\n    password: 'twenty-nine',\r\n    pass_expiry: '17/2/2013'\r\n});"]],"start1":6390,"start2":6390,"length1":20,"length2":262}]],"length":6652,"saved":false}
{"ts":1360620358504,"patch":[[{"diffs":[[0,"13'\r\n});"],[1,"\r\n/*"]],"start1":6644,"start2":6644,"length1":8,"length2":12}]],"length":6656,"saved":false}
