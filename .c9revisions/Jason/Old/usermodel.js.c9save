{"ts":1359742735227,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//revision  A\n//Date:     1/2/2013\n//Time:     12:15\n\n\nExt.define('User', {\n    extend: 'Ext.data.Model',\n\n    config: {\n        fields: ['username', 'password', 'secQ', 'secA', 'pass_expiry'],\n\n        validations: [\n            { type: 'presence',  field: 'username' },\n            { type: 'length',    field: 'username', min: 5 },\n            { type: 'format',    field: 'age', matcher: /\\d+/ }, //means it should be a number\n            { type: 'inclusion', field: 'gender', list: ['male', 'female'] },\n            { type: 'exclusion', field: 'name', list: ['admin'] }\n        ],\n\n        proxy: {\n            type: 'rest',\n            url : './Jason/users',\n            reader: {\n                type: 'json',\n                root: 'users'\n            }\n        }\n    }\n});\n\n// now lets try to create a new user with as many validation errors as we can\nvar newUser = Ext.create('User', {\n    username: 'admin',\n    password: 'twenty-nine',\n    pass_expiry: '17/2/2013'\n});\n\n// run some validation on the new user we just created\nvar errors = newUser.validate();\n\nconsole.log('Is User valid?', errors.isValid()); // returns 'false' as there were validation errors\nconsole.log('All Errors:', errors.items); // returns the array of all errors found on this model instance\n\nconsole.log('Password Errors:', errors.getByField('password')); // returns the errors for the password field"]],"start1":0,"start2":0,"length1":0,"length2":1383}]],"length":1383}
